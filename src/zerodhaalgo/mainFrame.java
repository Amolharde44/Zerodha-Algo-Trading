/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package zerodhaalgo;
import com.microsoft.sqlserver.jdbc.SQLServerException;
import com.zerodhatech.kiteconnect.KiteConnect;
import com.zerodhatech.kiteconnect.kitehttp.exceptions.KiteException;
import com.zerodhatech.kiteconnect.utils.Constants;
import com.zerodhatech.models.*;
import com.zerodhatech.ticker.*;
import java.io.IOException;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import org.json.JSONException;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.Statement;
import java.sql.*;

/**
 *
 * @author Amol
 */
public class mainFrame extends javax.swing.JFrame {
public static KiteConnect kiteSdk;
    /**
     * Creates new form mainFrame
     */
    public mainFrame() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jSplitPane1 = new javax.swing.JSplitPane();
        jButton1 = new javax.swing.JButton();
        name = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButton3 = new javax.swing.JButton();
        index = new javax.swing.JComboBox<>();
        stockName = new javax.swing.JTextField();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jButton1.setText("CONNECT TO ZERODHA");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(16, 15, 196, -1));
        getContentPane().add(name, new org.netbeans.lib.awtextra.AbsoluteConstraints(224, 15, 763, 23));

        jButton2.setText("LIST ALL STOCK");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(16, 56, 196, -1));

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "NAME", "HIGH", "LOW", "VOLUME", "LTP", "CHANGE"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(16, 108, 602, 361));

        jButton3.setText("Create DB");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton3, new org.netbeans.lib.awtextra.AbsoluteConstraints(224, 56, 111, -1));

        index.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "ALL", "NIFTY 50", "NIFTY 100", "NIFTY 200", "NIFTY IT", "NIFTY BANK", "NIFTY ENERGY" }));
        index.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                indexActionPerformed(evt);
            }
        });
        getContentPane().add(index, new org.netbeans.lib.awtextra.AbsoluteConstraints(347, 56, 96, -1));
        getContentPane().add(stockName, new org.netbeans.lib.awtextra.AbsoluteConstraints(461, 56, 109, -1));

        jButton4.setText("ADD TO DB");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton4, new org.netbeans.lib.awtextra.AbsoluteConstraints(588, 56, -1, -1));

        jButton5.setText("START");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton5, new org.netbeans.lib.awtextra.AbsoluteConstraints(624, 108, -1, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        //String req_token="8OZ9o5oYkAeOQ9Q2Bv26swAWGOI3ZfG3" ;  
        String req_token=JOptionPane.showInputDialog(this,"ENTER REQUEST TOKEN");
        System.out.print(req_token);
       String api_key="xhd4tghg2mfzqoif";
       String sec_key="wzjpzp8zqnbqki2adann6ut66okih1x8";
       kiteSdk = new KiteConnect("xhd4tghg2mfzqoif");
kiteSdk.setUserId("PT4480");
User users = null;
         try {
             users = kiteSdk.generateSession(req_token, sec_key);
         }  catch (IOException ex) {
          
        } catch (KiteException ex) { 
        Logger.getLogger(mainFrame.class.getName()).log(Level.SEVERE, null, ex);
    } catch (JSONException ex) {
        Logger.getLogger(mainFrame.class.getName()).log(Level.SEVERE, null, ex);
    }
kiteSdk.setAccessToken(users.accessToken);
        System.out.println("Acess Token"+users.accessToken);
kiteSdk.setPublicToken(users.publicToken);
Profile profile=null;
    try {
         profile=kiteSdk.getProfile();
    } catch (IOException | KiteException | JSONException ex) {
        Logger.getLogger(mainFrame.class.getName()).log(Level.SEVERE, null, ex);
    }
       // System.out.println("User Name:"+profile.userName);
name.setText(profile.userName);
        
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        
        DefaultTableModel model=(DefaultTableModel)jTable1.getModel();
        
    try {
        List<Instrument> list=kiteSdk.getInstruments();
     
        for(int i=0;i<list.size();i++)
        {
            
            
            if(list.get(i).exchange.equals("NSE")&&(list.get(i).name!=null)&&(!list.get(i).segment.equals("INDICES"))){
                
            
            model.addRow(new Object[]{list.get(i).name,list.get(i).exchange,list.get(i).instrument_type,list.get(i).last_price});
        }
        }
    } catch (KiteException | IOException | JSONException ex) {
        Logger.getLogger(mainFrame.class.getName()).log(Level.SEVERE, null, ex);
    }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        String url = "jdbc:sqlserver://localhost:1433;databaseName=AlgoTrading";
        String username = "Anemoi";
        String password = "Anemoi@123";
        System.out.println("check 1");
        try {
            // Load the JDBC driver (make sure the SQL Server JDBC driver JAR is in your classpath)
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");

            
            System.out.println("check 2");
            try ( // Establish a connection to the database
                    Connection connection = DriverManager.getConnection(url, username, password)) {
                System.out.println("check 3");
                // Create a statement for executing SQL commands
                Statement statement = connection.createStatement();
                System.out.println("check 4");
                // Create the ATP table
                String createTableSQL = "CREATE TABLE Stockes ("
                        + "name varchar(30) NOT NULL,"
                        + "indices varchar(30) NOT NULL,"
                        + "primary key(name,indices)"
                        + ")";
                statement.execute(createTableSQL);
                
                // Close the resources
                statement.close();
                connection.close();
            }

            System.out.println(" Stockes table created successfully.");

        } catch (ClassNotFoundException | SQLServerException e) {
            e.printStackTrace();
        } catch (SQLException ex) {
        Logger.getLogger(mainFrame.class.getName()).log(Level.SEVERE, null, ex);
    }
        
    }//GEN-LAST:event_jButton3ActionPerformed

    private void indexActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_indexActionPerformed
        // TODO add your handling code here:
        refreshTable();
    }//GEN-LAST:event_indexActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        
         String url = "jdbc:sqlserver://localhost:1433;databaseName=AlgoTrading";
        String username = "Anemoi";
        String password = "Anemoi@123";
        System.out.println("check 1");
        try {
            // Load the JDBC driver (make sure the SQL Server JDBC driver JAR is in your classpath)
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");

            
            System.out.println("check 2");
            try ( // Establish a connection to the database
                    Connection connection = DriverManager.getConnection(url, username, password)) {
                System.out.println("check 3");
                // Create a statement for executing SQL commands
                Statement statement = connection.createStatement();
                System.out.println("check 4");
                // Create the ATP table
                String[] stockList=stockName.getText().split(",");
                for(int i=0;i<stockList.length;i++)
                {
                 
                String createTableSQL = ("INSERT INTO  Stockes(name,indices) VALUES('"+stockList[i]+"','"+index.getSelectedItem().toString()+"')");
                 statement.execute(createTableSQL);
                }      
               
                refreshTable();
                // Close the resources
                statement.close();
                connection.close();
            }

            System.out.println(" Stockes table created successfully.");

        } catch (ClassNotFoundException | SQLServerException e) {
            e.printStackTrace();
        } catch (SQLException ex) {
        Logger.getLogger(mainFrame.class.getName()).log(Level.SEVERE, null, ex);
    }
        
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
        new Thread(new liveData()).start();
    }//GEN-LAST:event_jButton5ActionPerformed
 
    private void refreshTable()
    {
        DefaultTableModel model=(DefaultTableModel)jTable1.getModel();
        int count=model.getRowCount();
        for(int i=0;i<count;i++)
                {
                   model.removeRow(0);
                }
        String url = "jdbc:sqlserver://localhost:1433;databaseName=AlgoTrading";
        String username = "Anemoi";
        String password = "Anemoi@123";
        System.out.println("check 1");
        try {
            // Load the JDBC driver (make sure the SQL Server JDBC driver JAR is in your classpath)
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");

            
            System.out.println("check 2");
            try ( // Establish a connection to the database
                    Connection connection = DriverManager.getConnection(url, username, password)) {
                System.out.println("check 3");
                // Create a statement for executing SQL commands
                Statement statement = connection.createStatement();
                System.out.println("check 4");
                // Create the ATP table
                String createTableSQL = "select * from Stockes where indices='"+index.getSelectedItem().toString()+"'";
                        
                if(index.getSelectedItem().toString().equals("ALL"))
                {
                     createTableSQL = "select * from Stockes";
                }
                ResultSet rs=statement.executeQuery(createTableSQL);
                while(rs.next())
                {
                    model.addRow(new Object[]{rs.getString(1)});
                }
                
                // Close the resources
                statement.close();
                connection.close();
            }

            System.out.println(" Stockes table created successfully.");

        } catch (ClassNotFoundException | SQLServerException e) {
            e.printStackTrace();
        } catch (SQLException ex) {
        Logger.getLogger(mainFrame.class.getName()).log(Level.SEVERE, null, ex);
    }
        
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(mainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(mainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(mainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(mainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new mainFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> index;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSplitPane jSplitPane1;
    public static javax.swing.JTable jTable1;
    private javax.swing.JLabel name;
    private javax.swing.JTextField stockName;
    // End of variables declaration//GEN-END:variables
}
